name: CI

on:
  push:
  pull_request:
    branches:
      - master

  schedule:
    - cron: "0 6 * * 1"

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        crystal: [latest, nightly]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1
        with:
          crystal: ${{ matrix.crystal }}

      - name: Download source
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Run specs
        run: crystal spec --error-on-warnings --error-trace

      - name: Build the binary
        run: shards build --error-on-warnings --error-trace

      - name: Run core specs (Firefox)
        working-directory: ./core/tests
        run: ../../bin/mint test -b firefox

      - name: Run core specs (Google Chrome)
        working-directory: ./core/tests
        run: ../../bin/mint test -b chrome

      - name: Check formatting (Mint)
        working-directory: ./core
        run: ../bin/mint format --check

      - name: Check formatting (Crystal)
        run: crystal tool format --check

      - name: Run ameba
        run: bin/ameba

  build:
    name: Build
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Crystal
        uses: oprypin/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: shards install

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - if: matrix.os == 'ubuntu-latest'
        name: Build binary (Linux)
        run: |
          mkdir build
          docker-compose run --rm app crystal build src/mint.cr -o build/mint-${GITHUB_REF_SLUG}-linux --static --no-debug --release

      - if: matrix.os == 'macos-latest'
        name: Build binary (macOS)
        run: |
          mkdir build
          crystal build src/mint.cr -o build/mint-${GITHUB_REF_SLUG}-osx --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

      - if: github.ref == 'refs/heads/master'
        name: Upload to S3
        uses: shallwefootball/upload-s3-action@v1.1.3
        with:
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          aws_key_id: ${{ secrets.AWS_KEY }}
          source_dir: build
          destination_dir: ""

      - if: startsWith(github.ref, 'refs/tags/')
        name: Upload to GitHub Releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: build/*
          overwrite: true
          file_glob: true
