name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            openssl: default

          # macOS 13 (Intel) with OpenSSL 1.1
          - os: macos-13
            openssl: default

          # macOS 13 (Intel) with OpenSSL 3
          - os: macos-13
            openssl: 3

          # macOS latest (ARM64) with OpenSSL 1.1
          - os: macos-latest
            openssl: default

          # macOS latest (ARM64) with OpenSSL 3
          - os: macos-latest
            openssl: 3

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Install dependencies
        run: shards install

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Set architecture environment variable
        run: |
          if [ "$RUNNER_ARCH" == "X64" ]; then
            echo "ARCH=x86_64" >> $GITHUB_ENV
          elif [ "$RUNNER_ARCH" == "ARM64" ]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=unknown" >> $GITHUB_ENV
          fi

      - name: Set OpenSSL suffix
        run: |
          if [ "${{ matrix.openssl }}" == "3" ]; then
            echo "OPENSSL_SUFFIX=-openssl3" >> $GITHUB_ENV
          else
            echo "OPENSSL_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: Install OpenSSL 3 via Homebrew (macOS)
        if: startsWith(matrix.os, 'macos') && matrix.openssl == '3'
        run: |
          echo "Installing OpenSSL 3 via Homebrew..."
          brew update
          
          # Install or upgrade OpenSSL 3
          if brew list openssl@3 &>/dev/null; then
            echo "OpenSSL 3 found, upgrading..."
            brew upgrade openssl@3 || true
          else
            echo "Installing OpenSSL 3..."
            brew install openssl@3
          fi

          # Try to link, but don't fail if it doesn't work
          brew link openssl@3 --force --overwrite || true

          # Determine the correct paths based on architecture
          if [ "$RUNNER_ARCH" == "ARM64" ]; then
            BREW_PREFIX="/opt/homebrew"
          else
            BREW_PREFIX="/usr/local"
          fi
          
          # Use the actual installation path
          OPENSSL3_PATH="${BREW_PREFIX}/opt/openssl@3"
          
          # Verify OpenSSL 3 is installed
          if [ ! -d "$OPENSSL3_PATH" ]; then
            echo "Error: OpenSSL 3 not found at $OPENSSL3_PATH"
            exit 1
          fi
          
          echo "OpenSSL 3 found at: $OPENSSL3_PATH"
          
          # Set environment variables using the correct path
          echo "${OPENSSL3_PATH}/bin" >> $GITHUB_PATH
          echo "PKG_CONFIG_PATH=${OPENSSL3_PATH}/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "LDFLAGS=-L${OPENSSL3_PATH}/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I${OPENSSL3_PATH}/include" >> $GITHUB_ENV
          echo "OPENSSL_DIR=${OPENSSL3_PATH}" >> $GITHUB_ENV
          
          # Crystal specific
          echo "CRYSTAL_LIBRARY_PATH=${OPENSSL3_PATH}/lib:$CRYSTAL_LIBRARY_PATH" >> $GITHUB_ENV

      - if: matrix.os == 'ubuntu-latest'
        name: Build binary (Linux)
        run: |
          mkdir build
          docker compose run --rm app crystal build src/mint.cr \
            -o build/mint-${GITHUB_REF_SLUG}-linux-${ARCH} \
            --static --no-debug --release

      - if: startsWith(matrix.os, 'macos')
        name: Build binary (macOS)
        run: |
          mkdir build
          crystal build src/mint.cr \
            -o build/mint-${GITHUB_REF_SLUG}-osx-${ARCH}${OPENSSL_SUFFIX} \
            --no-debug --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: build-${{ matrix.os }}-${{ matrix.openssl }}
          path: build

      - if: startsWith(github.ref, 'refs/tags/')
        name: Upload to GitHub Releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          file: build/*
