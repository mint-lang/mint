name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            openssl: default

          # macOS 13 (Intel) with OpenSSL 1.1
          - os: macos-13

          # macOS 13 (Intel) with OpenSSL 3
          - os: macos-13
            openssl: "3"

          # macOS latest (ARM64) with OpenSSL 1.1
          - os: macos-latest

          # macOS latest (ARM64) with OpenSSL 3
          - os: macos-latest
            openssl: "3"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1

      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Install dependencies
        run: shards install

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5

      - name: Set architecture environment variable
        run: |
          if [ "$RUNNER_ARCH" == "X64" ]; then
            echo "ARCH=x86_64" >> $GITHUB_ENV
          elif [ "$RUNNER_ARCH" == "ARM64" ]; then
            echo "ARCH=arm64" >> $GITHUB_ENV
          else
            echo "ARCH=unknown" >> $GITHUB_ENV
          fi

      - name: Set OpenSSL suffix
        run: |
          if [ "${{ matrix.openssl }}" == "3" ]; then
            echo "OPENSSL_SUFFIX=-openssl3" >> $GITHUB_ENV
          else
            echo "OPENSSL_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: Install OpenSSL 3 via Homebrew (macOS)
        if: startsWith(matrix.os, 'macos') && matrix.openssl == '3'
        run: |
          echo "Installing OpenSSL 3 via Homebrew..."
          brew update
          brew install openssl@3
          brew link openssl@3 --force

      - if: matrix.os == 'ubuntu-latest'
        name: Build binary (Linux)
        run: |
          mkdir build
          docker compose run --rm app crystal build src/mint.cr \
            -o build/mint-${GITHUB_REF_SLUG}-linux-${ARCH} \
            --static --no-debug --release

      - if: startsWith(matrix.os, 'macos')
        name: Build binary (macOS)
        run: |
          mkdir build
          crystal build src/mint.cr \
            -o build/mint-${GITHUB_REF_SLUG}-osx-${ARCH}${OPENSSL_SUFFIX} \
            --no-debug --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: build-${{ matrix.os }}
          path: build

      - if: startsWith(github.ref, 'refs/tags/')
        name: Upload to GitHub Releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          file: build/*
