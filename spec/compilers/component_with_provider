type MouseProvider.Data {
  moves : Function(Position, Void),
  ups : Function(Position, Void)
}

provider MouseProvider : MouseProvider.Data {
  fun update : Void {
    void
  }
}

component Main {
  use MouseProvider {
    moves: (data : Position) : Void { void },
    ups: (data : Position) : Void { void }
  } when {
    false
  }

  fun render : Html {
    <div/>
  }
}
--------------------------------------------------------------------------------
import {
  createProvider as A,
  createElement as C,
  useId as B
} from "./runtime.js";

export const
  a = new Map(),
  D = A(a, () => {
    return null
  }),
  E = () => {
    const b = B();
    D(b, () => {
      return (false ? {
        moves: (c) => {
          return null
        },
        ups: (d) => {
          return null
        }
      } : null)
    });
    return C(`div`, {})
  };
