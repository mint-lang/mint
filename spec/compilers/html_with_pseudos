component Main {
  state hoverBackground : String = "yellow"
  state background : String = "blue"

  style test {
    background: #{background};
    color: red;

    &:hover {
      background: #{hoverBackground};
      color: cyan;
    }

    div {
      font-family: #{"Hello"};
      color: blue;
    }
  }

  fun render : Html {
    <div::test>
    </div>
  }
}
--------------------------------------------------------------------------------
class A extends _C {
  constructor(props) {
    super(props);

    this.state = new Record({
      b: `yellow`,
      a: `blue`
    });
  }

  $Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE() {
    const _ = {
      [`--a-a`]: this.a,
      [`--b-a`]: this.b,
      [`--c-a`]: `Hello`
    };

    return _;
  }

  get b() {
    return this.state.b;
  }

  get a() {
    return this.state.a;
  }

  render() {
    return _h("div", {
      className: `Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE`,
      style: _style([this.$Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE()])
    });
  }
};

A.displayName = "Main";

_insertStyles(`
.Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE {
  background: var(--a-a);
  color: red;
}

.Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE:hover {
  background: var(--b-a);
  color: cyan;
}

.Main_test_DO_NOT_USE_MINIMIZED_IN_BUILD_CODE div {
  font-family: var(--c-a);
  color: blue;
}
`);
