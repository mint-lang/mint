component Main {
  fun render : String {
    case ("x") {
      "a" => "a"
      "b" => "b"
      => "c"
    }
  }
}
-----------------------------------------------------CaseBranchNotMatchCondition
component Main {
  fun render : String {
    case ("x") {
      true => "a"
      "b" => "b"
      => "c"
    }
  }
}
-------------------------------------------------------CaseBranchMultipleSpreads
component Main {
  fun render : String {
    case ([]) {
      [...a,...b] => "a"
    }
  }
}
--------------------------------------------------------------CaseBranchNotArray
component Main {
  fun render : String {
    case ("") {
      [...a,...b] => "a"
    }
  }
}
---------------------------------------------------------CaseBranchTupleMismatch
component Main {
  fun render : String {
    case ({"a", "b"}) {
      {a, b, c} => "a"
    }
  }
}
--------------------------------------------------------------CaseBranchNotTuple
component Main {
  fun render : String {
    case ("") {
      {a, b} => "a"
    }
  }
}
---------------------------------------------------------CaseBranchNotMatchCondition
component Main {
  fun render : String {
    case ({"a", "b"}) {
      {"a", {"b"}} => "a"
    }
  }
}
---------------------------------------------------------CaseBranchNotTuple
component Main {
  fun render : String {
    case ({"a", "b"}) {
      {{a}, b} => "a"
    }
  }
}
