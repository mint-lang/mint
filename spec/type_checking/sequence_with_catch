module Promise {
  fun reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  fun test : Promise(Never, String) {
    sequence {
      greeting =
        Promise.reject("hello")

      blah =
        Promise.reject(0)

      "true"
    } catch String => a {
      "hello"
    } catch Number => a {
      "hello"
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
-------------------------------------------------------------SequenceDidNotCatch
module Promise {
  fun reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  fun test : Promise(Never, Bool) {
    sequence {
      greeting =
        Promise.reject("hello")

      blah =
        Promise.reject(0)

      true
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
----------------------------------------------------------SequenceCatchesNothing
component Main {
  fun test : Promise(Never, Bool) {
    sequence {
      true
    } catch String => error {
      false
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
-------------------------------------------------------SequenceCatchTypeMismatch
module Promise {
  fun reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  fun test : Promise(Never, Bool) {
    sequence {
      blah =
        Promise.reject(0)

      true
    } catch Number => error {
      ""
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}

-------------------------------------------------------SequenceCatchTypeMismatch
module Promise {
  fun reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  fun test : Promise(Never, Bool) {
    sequence {
      blah =
        Promise.reject(0)

      true
    } catch {
      ""
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
--------------------------------------------------------------SequenceCaughtAll
module Promise {
  fun reject (input : a) : Promise(a, b) {
    ``
  }
}

component Main {
  fun test : Promise(Never, Bool) {
    sequence {
      blah =
        Promise.reject(0)

      true
    } catch Number => error {
      false
    } catch {
      false
    }
  }

  fun render : Html {
    try {
      test()

      <div/>
    }
  }
}
