----------------------------------------------------------access_expected_field
component Main {
  fun render : String {
    "".
----------------------------------------------------------access_expected_field
component Main {
  fun render {
    A.
---------------------------------------------------------access_field_not_found
type Blah {
  blah : String
}

component Main {
  fun render : Bool {
    let blah =
      { blah: "Hello" }

    blah.blaha
  }
}
--------------------------------------------------------------access_not_record
component Main {
  fun render : Bool {
    let blah = ""

    blah.blah.blah
  }
}
--------------------------------------------------------------access_not_record
type Blah {
  blah : String
}

component Main {
  fun render : Bool {
    let blah =
      { blah: "Blah" }

    blah.blah.blah
  }
}
--------------------------------------------------------------access_not_record
module Test {
  fun b : Function(String) {
    Test.a
  }
}

component Main {
  fun render : String {
    Test.b()
  }
}
---------------------------------------------------------------variable_missing
module Test {
  fun b : Function(String) {
    XTest.a
  }
}

component Main {
  fun render : String {
    Test.b()
  }
}
-------------------------------------------------------------------------------
type Blah1 {
  blah : String
}

type Blah {
  blah : Blah1
}

component Main {
  fun render : String {
    let blah =
      { blah: { blah: "Helllo" } }

    blah.blah.blah
  }
}
-------------------------------------------------------------------------------
module Test {
  fun a : String {
    "Hello"
  }

  fun b : Function(String) {
    Test.a
  }
}

component Main {
  fun render : String {
    let x =
      Test.b()

    x()
  }
}
-------------------------------------------------------------------------------
store Test {
  get a : String {
    "Hello"
  }

  fun b : String {
    Test.a
  }
}
-------------------------------------------------------------------------------
type Test {
  test : String
}

provider Test : Test {
  fun print (a : String) : String {
    a
  }
}

component Main {
  use Test {
    test: ""
  }

  fun render : String {
    Test.print("x")
  }
}
-------------------------------------------------------------------------------
type Test {
  test : String
}

provider Test : Test {
  fun print (a : String) : String {
    a
  }
}

component Main {
  use Test {
    test: ""
  }

  fun render : String {
    Test.subscriptions
    Test.print("a")
  }
}
-------------------------------------------------------------------------------
store Settings {
  state settings : String = ""
}

module App.Page {
  fun test {
    ""
  }
}

enum App.Page {
  Settings
  Page
}

component Main {
  fun render : Html {
    case App.Page.Settings {
      App.Page.Settings => <div></div>
      App.Page.Page => <div></div>
    }
  }
}
