--------------------------------------------------record_update_expected_fields
component Main {
  get record : Record(String, Bool) {
    { a |
-----------------------------------------record_update_expected_closing_bracket
component Main {
  get record : Record(String, Bool) {
    { a | a: ""
----------------------------------------------record_update_not_updating_record
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    let x = ""

    { x |
      a: "Hello",
      b: 0
    }
  }

  fun render : String {
    test()

    ""
  }
}
----------------------------------------------------record_update_type_mismatch
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    let x =
      {
        a: "Blah",
        b: 0
      }

    { x |
      a: "Hello",
      b: "Hello"
    }
  }

  fun render : String {
    test()

    ""
  }
}
----------------------------------------------------record_update_not_found_key
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    let x =
      {
        a: "Blah",
        b: 0
      }

    { x |
      a: "Hello",
      c: "Hello"
    }
  }

  fun render : String {
    test()

    ""
  }
}
-------------------------------------------------------------------------------
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    let x =
      {
        a: "Blah",
        b: 1
      }

    { x |
      a: "Hello",
      b: 0
    }
  }

  fun render : String {
    test()

    ""
  }
}
-------------------------------------------------------------------------------
type A {
  b: B
}

type B {
  str: String
}

component Main {
  fun render {
    let data = {b: {str: "text" }}

    // let's create a copy updating only the "text"
    let dataUpdated = { data | b: { data.b | str: "text2" } }

    "ok"
  }
}
