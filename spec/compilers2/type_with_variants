enum A {
  B(name : String, color : String)
  C
}

component Main {
  fun render : String {
    case (A::B(name: "Joe", color: "Blue")) {
      A::B(color, name) => color
      A::C => ""
    }
  }
}
--------------------------------------------------------------------------------
import {
  patternVariable as I,
  patternRecord as H,
  newVariant as F,
  pattern as G,
  variant as B,
  match as E
} from "runtime";

const
  A = B(0),
  C = B([
    "name",
    "color"
  ]),
  D = () => {
    return E(F(C)(`Joe`, `Blue`), [
      [
        G(C, H([
          [
            "color",
            I
          ],
          [
            "name",
            I
          ]
        ])),
        (a, b) => {
          return a
        }
      ],
      [
        G(A, []),
        () => {
          return ``
        }
      ]
    ])
  };
