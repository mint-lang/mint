type Result(error, value) {
  Err(error)
  Ok(value)
}

record X.Y {
  blah : String
}

record X {
  name : String,
  y: X.Y
}

component Main {
  fun render : String {
    decode `null` as Object as X

    ""
  }
}
--------------------------------------------------------------------------------
import {
  decodeString as E,
  decoder as D,
  variant as B
} from "runtime";

const A = B(1);

const C = B(1);

const a = D(C, A, {
  blah: E(C, A)
});

const b = D(C, A, {
  name: E(C, A),
  y: a
});

const F = () => {
  b((null));
  return ``
};
