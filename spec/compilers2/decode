type Result(error, value) {
  Err(error)
  Ok(value)
}

record X.Y {
  blah : String
}

record X {
  name : String,
  y: X.Y
}

component Main {
  fun render : String {
    decode `null` as Object as X

    ""
  }
}
--------------------------------------------------------------------------------
import {
  decodeString as E,
  decoder as D,
  variant as B
} from "runtime";

const
  A = B(1),
  C = B(1),
  a = D(C, A, {
    blah: E(C, A)
  }),
  b = D(C, A, {
    name: E(C, A),
    y: a
  }),
  F = () => {
    b((null));
    return ``
  };
