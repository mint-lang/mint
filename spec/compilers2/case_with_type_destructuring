enum A(a) {
  B(a)
}

enum C(a) {
  D(A(a))
  X
}

component Main {
  fun render : String {
    case (C::D(A::B(""))) {
      C::X => ""
      C::D(a) =>
        case (a) {
          A::B(c) =>
            c
        }
    }

    ""
  }
}
--------------------------------------------------------------------------------
import {
  patternVariable as I,
  newVariant as G,
  pattern as H,
  variant as B,
  match as F
} from "runtime";

const
  A = B(0),
  C = B(1),
  D = B(1),
  E = () => {
    F(G(C)(G(D)(``)), [
      [
        H(A, []),
        () => {
          return ``
        }
      ],
      [
        H(C, [I]),
        (a) => {
          return F(a, [[
            H(D, [I]),
            (b) => {
              return b
            }
          ]])
        }
      ]
    ]);
    return ``
  };
